name: Build
on:
  push: { branches: [ "main" ] }
  pull_request: { branches: [ "main" ] }

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-manual:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
    steps:
      - uses: actions/checkout@v3
      - uses: prefix-dev/setup-pixi@v0.8.1
        with:
          pixi-version: v0.39.5
      - name: mkdocs
        env:
          # Since no browser is installed during this CI run, plotly fails to
          # produce HTML output, see https://github.com/plotly/plotly.py/blob/2c2dd6ab2eeff73c782457f33c590c1d09a97625/packages/python/plotly/plotly/io/_renderers.py#L532
          PLOTLY_RENDERER: browser
        run: |
          pixi run doc --strict
          # Disable further processing by GitHub
          touch generated/website/.nojekyll
      - name: detect broken links
        shell: bash -l {0}
        run: |
          python -m http.server 8880 --directory generated/website &
          sleep 1
          # We check for broken links:
          # * ignore fonts.gstatic.com which is mentioned by a link preconnect tag that linkchecker does not parse correctly.
          # * ignore DOIs since some publishers ban GitHub or bots.
          pixi run linkchecker --check-extern --no-robots --ignore fonts.gstatic.com --ignore doi.org http://localhost:8880/ --ignore mybinder.org --ignore osti.gov --no-warnings
        # We only check links on Linux since we do not want to get flagged because of too many requests by the target websites.
        if: ${{ matrix.os == 'ubuntu-latest' }}
      - uses: JamesIves/github-pages-deploy-action@v4.3.3
        with:
          branch: gh-pages
          folder: generated/website
          target-folder: ""
          single-commit: true
        if: ${{ github.event_name == 'push' && matrix.os == 'ubuntu-latest' }}
